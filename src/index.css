@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the magical anime design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Anime-inspired magical color palette */
    --anime-deep-blue: 240 85% 8%;
    --anime-blue: 240 80% 15%;
    --anime-magic-purple: 270 70% 25%;
    --anime-bright-purple: 280 85% 60%;
    --anime-gold: 45 100% 65%;
    --anime-bright-gold: 50 100% 75%;
    --anime-pink: 320 85% 70%;
    --anime-cyan: 180 100% 70%;
    --anime-white: 0 0% 98%;
    --anime-sparkle: 60 100% 90%;

    --background: var(--anime-deep-blue);
    --foreground: var(--anime-white);

    --card: 240 50% 12%;
    --card-foreground: var(--anime-white);

    --popover: var(--anime-blue);
    --popover-foreground: var(--anime-white);

    --primary: var(--anime-bright-purple);
    --primary-foreground: var(--anime-white);

    --secondary: var(--anime-magic-purple);
    --secondary-foreground: var(--anime-white);

    --muted: 240 30% 20%;
    --muted-foreground: 240 15% 70%;

    --accent: var(--anime-gold);
    --accent-foreground: var(--anime-deep-blue);

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: var(--anime-white);

    --border: 240 40% 25%;
    --input: 240 50% 15%;
    --ring: var(--anime-bright-purple);

    --radius: 1rem;

    /* Magical gradients */
    --gradient-magic: linear-gradient(135deg, hsl(var(--anime-bright-purple)), hsl(var(--anime-pink)), hsl(var(--anime-gold)));
    --gradient-aurora: linear-gradient(45deg, hsl(var(--anime-cyan)), hsl(var(--anime-bright-purple)), hsl(var(--anime-pink)));
    --gradient-sparkle: radial-gradient(circle, hsl(var(--anime-sparkle)) 0%, hsl(var(--anime-gold)) 50%, transparent 70%);
    --gradient-glow: radial-gradient(circle, hsl(var(--anime-bright-purple) / 0.3) 0%, transparent 70%);
    
    /* Shadows and glows */
    --shadow-magic: 0 0 30px hsl(var(--anime-bright-purple) / 0.5);
    --shadow-gold: 0 0 20px hsl(var(--anime-gold) / 0.6);
    --shadow-soft: 0 10px 40px hsl(240 50% 5% / 0.5);

    /* Animation timings */
    --transition-magic: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-bounce: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);

    --sidebar-background: 0 0% 98%;

    --sidebar-foreground: 240 5.3% 26.1%;

    --sidebar-primary: 240 5.9% 10%;

    --sidebar-primary-foreground: 0 0% 98%;

    --sidebar-accent: 240 4.8% 95.9%;

    --sidebar-accent-foreground: 240 5.9% 10%;

    --sidebar-border: 220 13% 91%;

    --sidebar-ring: 217.2 91.2% 59.8%;
  }

  /* Keep same theme in both light and dark mode for consistent magical experience */
  .dark {
    --background: var(--anime-deep-blue);
    --foreground: var(--anime-white);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground overflow-x-hidden;
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, system-ui, sans-serif;
    min-height: 100vh;
  }

  html {
    scroll-behavior: smooth;
  }
}

@layer components {
  /* Magical input field */
  .magic-input {
    @apply relative bg-gradient-to-r from-purple-900/20 to-blue-900/20 backdrop-blur-sm;
    @apply border-2 border-purple-400/30 rounded-2xl px-6 py-4 text-white placeholder-purple-300/60;
    @apply focus:border-purple-400 focus:ring-4 focus:ring-purple-400/20 focus:outline-none;
    @apply transition-all duration-500 shadow-[0_0_30px_rgba(168,85,247,0.3)];
    background: linear-gradient(135deg, hsl(var(--anime-magic-purple) / 0.2), hsl(var(--anime-blue) / 0.3));
    box-shadow: var(--shadow-magic);
  }

  .magic-input:focus {
    transform: translateY(-2px);
    box-shadow: 0 0 40px hsl(var(--anime-bright-purple) / 0.6);
  }

  /* Magical button */
  .magic-button {
    @apply relative overflow-hidden rounded-2xl px-8 py-4 font-semibold text-white;
    @apply transform transition-all duration-300 hover:scale-105 active:scale-95;
    background: var(--gradient-magic);
    box-shadow: var(--shadow-magic);
  }

  .magic-button:hover {
    box-shadow: 0 0 50px hsl(var(--anime-bright-purple) / 0.8);
  }

  /* Sparkle animation */
  .sparkle {
    @apply absolute pointer-events-none;
    animation: sparkle 2s infinite;
  }

  @keyframes sparkle {
    0%, 100% { opacity: 0; transform: scale(0) rotate(0deg); }
    50% { opacity: 1; transform: scale(1) rotate(180deg); }
  }

  /* Floating animation */
  .float {
    animation: float 6s ease-in-out infinite;
  }

  @keyframes float {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    33% { transform: translateY(-20px) rotate(2deg); }
    66% { transform: translateY(-10px) rotate(-2deg); }
  }

  /* Glow text */
  .glow-text {
    text-shadow: 0 0 20px hsl(var(--anime-bright-purple) / 0.8);
  }

  /* Animated background */
  .animated-bg {
    background: linear-gradient(-45deg, 
      hsl(var(--anime-deep-blue)), 
      hsl(var(--anime-blue)), 
      hsl(var(--anime-magic-purple)), 
      hsl(var(--anime-deep-blue))
    );
    background-size: 400% 400%;
    animation: gradientShift 15s ease infinite;
  }

  @keyframes gradientShift {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  /* Confetti particles */
  .confetti {
    position: absolute;
    width: 10px;
    height: 10px;
    background: var(--gradient-magic);
    animation: confetti-fall 3s linear infinite;
  }

  @keyframes confetti-fall {
    0% {
      transform: translateY(-100vh) rotate(0deg);
      opacity: 1;
    }
    100% {
      transform: translateY(100vh) rotate(720deg);
      opacity: 0;
    }
  }
}
